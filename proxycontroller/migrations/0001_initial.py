# -*- coding: utf-8 -*-
# Generated by Django 1.11.3 on 2019-03-28 07:39
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CHANNEL',
            fields=[
                ('channel', models.IntegerField(primary_key=True, serialize=False, verbose_name='Channel')),
                ('celery_queue', models.CharField(max_length=100, verbose_name='Celery Queue Name')),
                ('local_address', models.GenericIPAddressField(verbose_name='Local IP Address')),
            ],
            options={
                'verbose_name': 'Channels',
                'verbose_name_plural': 'Channels',
            },
        ),
        migrations.CreateModel(
            name='IDC',
            fields=[
                ('idc', models.CharField(max_length=100, primary_key=True, serialize=False, verbose_name='IDC Name')),
            ],
            options={
                'verbose_name': 'IDC',
                'verbose_name_plural': 'IDC',
            },
        ),
        migrations.CreateModel(
            name='SERVER_STATE',
            fields=[
                ('state', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Server State')),
            ],
            options={
                'verbose_name': 'Server State',
                'verbose_name_plural': 'Server State',
            },
        ),
        migrations.CreateModel(
            name='SSR_SERVER',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server', models.GenericIPAddressField(verbose_name='SSR Server IP Address')),
                ('server_port', models.IntegerField(default=3389, verbose_name='Server Port')),
                ('local_address', models.GenericIPAddressField(default='0.0.0.0', verbose_name='Local IP Address')),
                ('timeout', models.IntegerField(default=300, verbose_name='Timeout')),
                ('password', models.CharField(default='test123', max_length=40, verbose_name='Password')),
                ('method', models.CharField(default='aes-256-cfb', max_length=40, verbose_name='Method')),
                ('protocol', models.CharField(default='auth_sha1_v4_compatible', max_length=40, verbose_name='Protocol')),
                ('protocol_param', models.CharField(default='3', max_length=40, verbose_name='Protocol Parameter')),
                ('obfs', models.CharField(default='plain', max_length=40, verbose_name='Obfuscation')),
                ('obfs_param', models.CharField(blank=True, max_length=40, null=True, verbose_name='Obfuscation Parameter')),
                ('region', models.CharField(blank=True, max_length=40, null=True, verbose_name='Server Region')),
                ('status', models.CharField(default='OK', max_length=14, verbose_name='status')),
                ('idc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='proxycontroller.IDC', verbose_name='IDC')),
                ('state', models.ForeignKey(default='INIT_PROCESS', on_delete=django.db.models.deletion.CASCADE, to='proxycontroller.SERVER_STATE', verbose_name='State')),
            ],
            options={
                'verbose_name': 'SSR Servers',
                'verbose_name_plural': 'SSR Servers',
            },
        ),
    ]
