#credits to: Paul Cyrus Verzola and Jommel Valdez
#created by: Yroll Jay-R Macalino
---
- hosts: 127.0.0.1
  gather_facts: no

  vars_prompt:
  - name: "cent_username"
    prompt: "Username"
    private: no
  - name: "cent_password"
    prompt: "Password"
    private: yes

  tasks:
  - name: "Setting up"
    lineinfile:
     dest: '{{ item.dest }}'
     regexp: '^{{ item.regexp }}'
     line: '{{ item.line }}'
     state: present
    with_items:
     - { dest: './initialization-centOS7-forwarding-2018-config', regexp: 'ansible_ssh_user=', line: 'ansible_ssh_user={{ cent_username  }}'  }
     - { dest: './initialization-centOS7-forwarding-2018-config.bak', regexp: 'ansible_ssh_user=', line: 'ansible_ssh_user={{ cent_username  }}'  }
     - { dest: './initialization-centOS7-forwarding-2018-config', regexp: 'ansible_ssh_pass=', line: 'ansible_ssh_pass={{ cent_password  }}'  }
     - { dest: './initialization-centOS7-forwarding-2018-config.bak', regexp: 'ansible_ssh_pass=', line: 'ansible_ssh_pass={{ cent_password  }}'  }
    ignore_errors: yes
  - name: Access the server
    shell: for i in `cat ${location}initialization-centOS7-forwarding-with-puppet-2018-config.list`; do xterm -title "$i" -hold -e "sshpass -p {{ cent_password  }} ssh {{ cent_username  }}@$i -o StrictHostKeyChecking=no" & done
  - name: PUPPETCERT
    debug:
     msg:
      - "1 - Run 'puppet agent --test' to generate certificate"
      - "2 - Review configuration first before generating certificate"


- hosts: init-centOS7-forwarding-2018
  gather_facts: no

  vars:
   SSHPORT: "2556"
   user: "omadmin"
   pw: "S18B300"
   pupdir: "/etc/puppetlabs/puppet/"

  vars_prompt:
  - name: "cent_choose"
    prompt: Num [1 or 2]
    private: no
  - name: "cent_hostname"
    prompt: "Set server hostname"
    private: no
  

  pre_tasks:
  - name: "Set server hostname"
    hostname:
     name: "{{ cent_hostname }}"
  - name: "Checking DNS"
    command: cat /etc/resolv.conf
    register: dns_server
    changed_when: false
  - name: "Change DNS"
    lineinfile:
     dest: /etc/resolv.conf
     regexp: '^nameserver {{ item }}'
     line: 'nameserver {{ item }}'
     state: present
    with_items:
     - 8.8.8.8
     - 8.8.4.4
    changed_when: '"{{ item }}" not in dns_server.stdout'
    ignore_errors: yes


  handlers:
  - name: Installing wget
    yum:
     name:
     - wget
     state: present
  - name: Downloading rpmforge
    get_url:
     url: http://office.pc-setting.info/cyrus/add-rpmforge_epel-repo.sh
     url_username: omadmin
     url_password: S18B300
     dest: /root/
     mode: 0755
  - name: Executing script
    shell: /root/add-rpmforge_epel-repo.sh && yum clean all && yum makecache
  - name: Installing package
    yum:
     name: 
     - "{{ item }}"
     state: present
    with_items:  
     - vim-enhanced
     - net-tools
     - lsof
     - wget
     - cronie
     - ntp
     - lrzsz
     - gcc
     - gcc-c++
     - make
     - cmake
     - libxml2-devel
     - openssl-devel
     - curl
     - curl-devel
     - unzip
     - sudo
     - libaio-devel
     - ncurses-devel
     - autoconf
     - automake
     - zlib-devel
     - python-devel
     - iptables-services
     - policycoreutils
     - openssh-clients
     - iproute
     - telnet
     - xinetd
     - git
     - psmisc
  - name: Removing package
    yum:
     name:
     - "{{ item }}"
     state: absent
    with_items:
     - lyx-fonts
     - selinux-policy*
     - firewalld
     - iw*
     - NetworkManager*
     - wpa_supplicant
     - newt
     - dnsmasq
  - name: Removing user
    user:
     name: 
     - "{{ item }}"
     state: absent
     remove: yes
    with_items:
     - adm 
     - operator 
     - games
     - gopher
  - name: Removing group
    group:
     name: 
     - "{{ item }}"
     state: absent
    with_items:
     - adm 
     - dip
     - audio
     - dialout
     - floppy
     - games
     - gopher
     - tape
     - video
  - name: Creating snadmin user
    user:
     name: snadmin
     state: present
  - name: Creating directory
    file:
     path: /home/snadmin/.ssh
     state: directory
     mode: 0700
  - name: Downloading authorized_keys
    get_url:
     url: http://office.pc-setting.info/cyrus/authorized_keys
     url_username: omadmin
     url_password: S18B300
     dest: /home/snadmin/.ssh/
     mode: 0600
  - name: Changing ownership
    file:
     path: /home/snadmin/.ssh/authorized_keys
     owner: snadmin
     group: snadmin
     mode: 0600


  - name: Moving .bashrc to snadmin
    command: mv /root/.bashrc /home/snadmin/bashrc-root.txt
    failed_when: false
  - name: Downloading root-bashrc
    get_url:
     url: http://office.pc-setting.info/cyrus/root-bashrc.txt
     url_username: omadmin
     url_password: S18B300
     dest: "{{ item }}"
    with_items:
     - /root/.bashrc
     - /home/snadmin/root-bashrc.txt
  - name: Adding file on tmp
    file:
     path: /tmp/{{ item }}
     state: touch
    with_items:
      - name0
      - name1
  - name: Copying .bashrc
    copy: 
     remote_src: yes
     src: /home/snadmin/.bashrc
     dest: /home/snadmin/bashrc-snadmin.txt
  - name: Appending on .bashrc
    lineinfile:
     dest: /home/snadmin/.bashrc
     line: 'export HISTTIMEFORMAT="%d/%m/%y %T "'
     state: present
     insertafter: EOF
  - name: Executing a command
    shell: source /root/.bashrc /home/snadmin/.bashrc && mv /etc/bashrc /home/snadmin/etc-bashrc.txt
    failed_when: false
  - name: Downloading root-etc-bashrc
    get_url:
     url: http://office.pc-setting.info/cyrus/root-etc-bashrc.txt
     url_username: omadmin
     url_password: S18B300
     dest: /etc/bashrc
  - name: Appending on rsyslog.conf
    lineinfile:
     dest: /etc/rsyslog.conf
     line: 'local2.info                                     -/var/log/tmp.log'
     state: present
     insertafter: EOF
  - name: Adding file on /var/log/
    file:
     path: /var/log/tmp.log
     state: touch
     mode: 600
  - name: Restarting rsyslog service
    systemd:
     name: rsyslog
     state: restarted
  - name: Disabling firewalld
    systemd: 
     name: firewalld.service
     state: stopped
     masked: yes
     enabled: no
    ignore_errors: yes
  - name: Enabling iptables
    systemd:
     name: iptables
     enabled: yes
  - name: Configuring iptables
    file:
     src: /usr/libexec/iptables/iptables.init
     dest: /etc/init.d/iptables
     state: link
  - name: Configuring iptables2
    file:
     path: /bak/bin
     state: directory
  - name: Downloading iptables.sh
    get_url:
     url: http://office.pc-setting.info/cyrus/iptables.sh
     url_username: omadmin
     url_password: S18B300
     dest: /bak/bin
     mode: 0755
  - name: Adding to rc.local
    lineinfile:
     dest: /etc/rc.d/rc.local
     line: 'sh /bak/bin/iptables.sh'
     mode: "u+x"
     state: present
     insertafter: EOF
  - name: Run iptables
    command: "{{ item }}"
    with_items:
     - /bak/bin/iptables.sh
     - /etc/init.d/iptables save
    ignore_errors: yes

  - name: Configuring ssh
    replace: 
     path: /etc/ssh/sshd_config
     regexp: "{{ item.regexp }}"
     replace: "{{ item.line }}"
    with_items:
     - { regexp: '#Port 22', line: 'Port {{ SSHPORT }}' }
     - { regexp: '#PermitRootLogin yes', line: 'PermitRootLogin yes' }
     - { regexp: '#PermitEmptyPasswords no', line: 'PermitEmptyPasswords no' }
     - { regexp: 'GSSAPIAuthentication yes', line: 'GSSAPIAuthentication no' }
     - { regexp: 'PasswordAuthentication yes', line: 'PasswordAuthentication no' }
     - { regexp: '#PermitUserEnvironment no', line: 'PermitUserEnvironment yes' }
     - { regexp: '#UseDNS yes', line: 'UseDNS no' }
     - { regexp: '#LoginGraceTime 2m', line: 'LoginGraceTime 1m' }
  - name: Configuring ssh2
    lineinfile:
     dest: /etc/ssh/sshd_config
     line: "{{ item }}"
     state: present
     insertafter: EOF
    with_items:
     - AllowUsers snadmin root@203.192.151.10
     - LogLevel DEBUG
  - name: Restarting ssh service
    systemd:
     name: sshd.service
     state: restarted
  - name: Checking multi-user
    command: systemctl get-default
    register: system
    changed_when: false
  - name: Setting multi-user
    command: systemctl set-default multi-user.target
    changed_when: 'system.stdout != "multi-user.target"'
  - name: Disabling SELINUX
    selinux: 
     state: disabled
    ignore_errors: yes
  - name: Configuring fstab
    replace:
     path: /etc/fstab
     regexp: 'defaults'
     replace: 'noatime'
  - name: Configuring tmp
    file:
     path: "{{ item }}"
     state: absent
    with_items:
     - /var/tmp
     - /usr/tmp
    ignore_errors: yes
  - name: Configuring tmp2
    file:
     src: /tmp/
     dest: "{{ item }}"
     state: link
    with_items:
     - /var/tmp
     - /usr/tmp
    ignore_errors: yes
  - name: Managing running services
#    shell: systemctl list-unit-files | grep "{{ item }}" | awk '{print $1}' | cut -d "." -f1 > out
    shell: for i in {cpuspeed,crond,irqbalance,messagebus,smartd,sshd,syslog} ; do systemctl list-unit-files | grep $i | awk '{print $1}' | cut -d "." -f1 ; done
#    with_items: 
#     - cpuspeed
#     - crond
#     - irqbalance
#     - messagebus
#     - smartd
#     - sshd
#     - syslog
#  - name: Checking running services
#    command: cat out
    register: listfiles
  - name: The following are the running or enabled services
    debug:
     var: listfiles.stdout_lines
  - name: Disabling services (postfix and NetworkManager)
    systemd:
     name: "{{ item.name }}"
     state: "{{ item.state }}"
     enabled: no
    with_items:
     - { name: 'postfix', state: 'stopped' }
     - { name: 'NetworkManager', state: 'stopped' }
     - { name: 'network.service', state: 'restarted' }
    ignore_errors: yes
  - name: Disabling avahi-daemon 
    command: "{{ item }}"
    ignore_errors: yes
    with_items:
     - systemctl stop avahi-daemon.socket avahi-daemon.service
     - systemctl disable avahi-daemon.socket avahi-daemon.service
    failed_when: false
  - name: Configuring ulimit
    lineinfile:
     dest: /etc/rc.local
     line: 'ulimit -SHn 102400'
     state: present
     insertafter: EOF
  - name: Configuring ulimit2
    pam_limits:
     domain: '*'
     limit_type: "{{ item.ltype }}"
     limit_item: "{{ item.litem }}"
     value: 102400
    with_items:
     - { ltype: 'soft', litem: 'nofile' }
     - { ltype: 'hard', litem: 'nofile' }
     - { ltype: 'soft', litem: 'nproc' }
     - { ltype: 'hard', litem: 'nproc' }
  - name: Creating backup for sysctl
    copy:
     remote_src: yes
     src: /etc/sysctl.conf
     dest: /tmp/sysctl.conf.bak
  - name: Configuring and reloading sysctl
    sysctl:
     name: "{{ item.name }}"
     value: "{{ item.value }}"
     state: present
     reload: yes
    with_items:
     - { name: 'net.ipv4.ip_forward', value: '0' }
     - { name: 'net.ipv4.conf.default.rp_filter', value: '1' }
     - { name: 'net.ipv4.conf.default.accept_source_route', value: '0' }
     - { name: 'kernel.sysrq', value: '0' } 
     - { name: 'kernel.core_uses_pid', value: '1' }
     - { name: 'net.ipv4.tcp_syncookies', value: '1' }
     - { name: 'kernel.msgmnb', value: '65536' }
     - { name: 'kernel.msgmax', value: '65536' }
     - { name: 'kernel.shmmax', value: '68719476736' }
     - { name: 'kernel.shmall', value: '4294967296' }
     - { name: 'net.ipv4.tcp_max_tw_buckets', value: '6000' }
     - { name: 'net.ipv4.tcp_sack', value: '1' }
     - { name: 'net.ipv4.tcp_window_scaling', value: '1' }
     - { name: 'net.ipv4.tcp_rmem', value: '4096 87380 4194304' }
     - { name: 'net.ipv4.tcp_wmem', value: '4096 16384 4194304' }
     - { name: 'net.core.wmem_default', value: '8388608' }
     - { name: 'net.core.rmem_default', value: '8388608' }
     - { name: 'net.core.rmem_max', value: '16777216' }
     - { name: 'net.core.wmem_max', value: '16777216' }
     - { name: 'net.core.netdev_max_backlog', value: '262144' }
     - { name: 'net.core.somaxconn', value: '32768' }
     - { name: 'net.ipv4.tcp_max_orphans', value: '3276800' }
     - { name: 'net.ipv4.tcp_max_syn_backlog', value: '262144' }
     - { name: 'net.ipv4.tcp_timestamps', value: '0' }
     - { name: 'net.ipv4.tcp_synack_retries', value: '1' }
     - { name: 'net.ipv4.tcp_syn_retries', value: '1' }
     - { name: 'net.ipv4.tcp_tw_recycle', value: '1' }
     - { name: 'net.ipv4.tcp_tw_reuse', value: '1' }
     - { name: 'net.ipv4.tcp_mem', value: '94500000 915000000 927000000' }
     - { name: 'net.ipv4.tcp_fin_timeout', value: '1' }
     - { name: 'net.ipv4.tcp_keepalive_time', value: '1200' }
     - { name: 'net.ipv4.ip_local_port_range', value: '1024 65535' }
  - name: Setting up default timezone HK
    timezone:
     name: Asia/Hong_Kong
  - name: Setting up cron
    cron:
     name: "{{ item.name }}"
     job: "{{ item.job }}"
     user: root
     hour: "{{ item.hour }}"
     minute: "{{ item.minute }}"
     state: present
    with_items:
     - { name: 'Setting ntpupdate', job: '/usr/sbin/ntpdate pool.ntp.org > /dev/null 2>&1', hour: '*/5', minute: '*' }
#     - { name: 'Setting cmdb', job: 'python /bak/scripts/monitor/cmdb_agent/bin/run.py >> /bak/scripts/monitor/cmdb.log 2>&1', hour: '*', minute: '1' }
  - name: Executing ntpdate
    command: /usr/sbin/ntpdate pool.ntp.org
    failed_when: false
  - name: Checking current time
    shell: timedatectl status | grep "Local time"
    register: ctime
  - name: Current Time
    debug: 
     var: ctime.stdout_lines
  - name: Setting default language US
    command: localectl set-locale LANG=en_US.UTF-8
  - name: Downloading nrpe script
    get_url:
     url: http://office.pc-setting.info/cyrus/nrpe-centOS7.sh
     url_username: omadmin
     url_password: S18B300
     dest: /root/
     mode: 0755
  - name: Installing nrpe
    command: /root/nrpe-centOS7.sh
  - name: Creating directory (/bak/scripts/monitor)
    file:
     path: /bak/scripts/monitor
     state: directory
  - name: Downloading cmdb_agent
    git:
     repo: 'http://om:S18B300@git.neweb.me/python_codes/cmdb_agent.git'
     dest: /bak/scripts/monitor/cmdb_agent
  - name: Setting cmdb script
    command: python /bak/scripts/monitor/cmdb_agent/bin/run.py
##### Puppet
  - name: Downloading puppet agent cloud
    get_url:
     url: http://office.pc-setting.info/cyrus/puppet5-agent-install-cloud.sh
     url_username: omadmin
     url_password: S18B300
     dest: /root/
     mode: '+x'
  - name: Installing puppet
    command: sh /root/puppet5-agent-install-cloud.sh
  - name: Adding Epel and Rpmforge Repository
    shell: "{{ item }}"
    with_items:
     - 'find /root/ -type f -name "add-rpmforge_epel-repo.sh" | xargs rm -f'
     - 'find /root/ -type f -name "RPM-GPG-KEY.dag.txt" | xargs rm -f'
  - name: Downloading rpmforge
    get_url:
     url: http://office.pc-setting.info/cyrus/add-rpmforge_epel-repo.sh
     url_username: omadmin
     url_password: S18B300
     dest: /root/
     mode: '+x'
  - name: Executing script
    shell: /root/add-rpmforge_epel-repo.sh
  - name: Variable
    shell: "{{ item.shell }}"
    register: "{{ item.register }}"
    with_items:
     - { shell: 'cat /etc/redhat-release 2>&1', register: 'centos'  }
     - { shell: "cat /etc/redhat-release | awk '{print $3}' | cut -d '.' -f1 2>&1", register: 'centos6'  }
     - { shell: "cat /etc/redhat-release | awk '{print $4}' | cut -d '.' -f1 2>&1", register: 'centos7'  }
     - { shell: 'uname -r | cut -d "." -f1 2>&1', register: 'kernel'  }
     - { shell: 'rpm -qf /etc/yum.repos.d/puppetlabs.repo 2> /dev/null', register: 'oldver'  }
     - { shell: "systemctl list-unit-files | grep puppet | awk '{print $1}' | cut -d '.' -f1 | head -n1", register: 'pup7'  }
     - { shell: "chkconfig --list | grep puppet | awk '{print $1}'", register: 'pup6'  }
  - name: Variable2
    shell: curl -s https://ip.cn | grep -E -o '([0-9]{1,3}[\.]){3}[0-9]{1,3}'
    register: IP
  - name: Variable3
    shell: rpm -qf /etc/yum.repos.d/puppetlabs.repo
    register: oldver
    ignore_errors: yes
  - name: Variable4
    shell: cat /etc/redhat-release 2>&1
    register: centos
  - name: Variable5
    shell: cat /etc/redhat-release | awk '{print $3}' | cut -d '.' -f1 2>&1
    register: centos6
  - name: Variable6
    shell: cat /etc/redhat-release | awk '{print $4}' | cut -d '.' -f1 2>&1
    register: centos7
  - name: Variable7
    shell: uname -r | cut -d "." -f1 2>&1
    register: kernel
  - name: Variable8
    shell: systemctl list-unit-files | grep puppet | awk '{print $1}' | cut -d '.' -f1 | head -n1
    register: pup7
  - name: Variable9
    shell: chkconfig --list | grep puppet | awk '{print $1}'
    register: pup6
  - name: old_puppet_repo Stopping old puppet process
    command: killall -9 puppet
    ignore_errors: yes
  - name: old_puppet_repo Checking if /etc/yum.repos.d/puppetlabs.repo exist
    stat:
     path: /etc/yum.repos.d/puppetlabs.repo
    register: puppetlabs
  - name: old_puppet_repo Removing puppetlabs
    shell: yum remove -y "{{ oldver }}" puppet
    when: 'puppetlabs.stat.exists == true'
  - name: old_puppet_repo Removing puppet
    yum:
     name: puppet
     state: removed
    when: 'puppetlabs.stat.exists == false'
  - name: old_puppet_repo Removing puppet files
    file:
     path: "{{ item }}"
     state: absent
    with_items:
     - /etc/puppet
     - /var/lib/puppet
  - name: old_puppet_repo Loading
    pause: 
     seconds: 5
  - name: Checking if puppet6 is installed
    debug:
     msg: "Puppet was already installed. Review puppet.conf"
    when: 'centos6.stdout == "6" and pup6.stdout == "puppet"'
  - name: Installing Puppet Repository for CentOS 6.x
    command: rpm -Uvh https://yum.puppet.com/puppet/puppet-release-el-6.noarch.rpm
    when: 'centos6.stdout == "6" and pup6.stdout != "puppet"'
  - name: Puppet6 Installing Puppet Agent
    yum:
     name: puppet-agent
     state: present
    when: 'centos6.stdout == "6" and pup6.stdout != "puppet"'
  - name: Puppet6 Configuring Puppet Agent
    lineinfile:
     dest: '{{ item.dest }}'
     regexp: '^{{ item.regexp }}'
     line: '{{ item.line }}'
     state: present
    with_items:
     - { dest: '/etc/puppetlabs/puppet/puppet.conf', regexp: 'certname = ', line: 'certname = {{ IP.stdout }}'  }
     - { dest: '/etc/puppetlabs/puppet/puppet.conf', regexp: 'server = ', line: 'server = puppetmaster-softlayer-hk189'  }
     - { dest: '/etc/puppetlabs/puppet/puppet.conf', regexp: 'environment = ', line: 'environment = production'  }
     - { dest: '/etc/puppetlabs/puppet/puppet.conf', regexp: 'runinterval = ', line: 'runinterval = 1m'  }
     - { dest: '/etc/hosts', regexp: '119.81.239.189 puppetmaster-softlayer-hk189', line: '119.81.239.189 puppetmaster-softlayer-hk189'  }
    when: 'centos6.stdout == "6" and pup6.stdout != "puppet"'
  - name: Puppet6 source /etc/profile
    shell: source /etc/profile
    args:
     executable: /bin/bash
    when: 'centos6.stdout == "6" and pup6.stdout != "puppet"'
  - name: Enable puppet6
    systemd:
     name: puppet
     enabled: yes
    when: 'centos6.stdout == "6" and pup6.stdout != "puppet"'
  - name: Puppet6 agent
    debug:
     msg: "Puppet Agent has been installed."
    when: 'centos6.stdout == "6" and pup6.stdout != "puppet"'
  - name: Checking if puppet7 is installed
    debug:
     msg: "Puppet was already installed. Review puppet.conf"
    when: 'centos7.stdout == "7" and pup7.stdout == "puppet"'
  - name: Installing Puppet Repository for CentOS 7.x
    command: rpm -Uvh https://yum.puppet.com/puppet/puppet-release-el-7.noarch.rpm
    when: 'centos7.stdout == "7" and pup7.stdout != "puppet"'
    ignore_errors: yes
  - name: Puppet7 Installing Puppet Agent
    yum:
     name: puppet-agent
     state: present
    when: 'centos7.stdout == "7" and pup7.stdout != "puppet"'
  - name: Puppet7 Configuring Puppet Agent
    lineinfile:
     dest: '{{ item.dest }}'
     regexp: '^{{ item.regexp }}'
     line: '{{ item.line }}'
     state: present
    with_items:
     - { dest: '/etc/puppetlabs/puppet/puppet.conf', regexp: 'certname = ', line: 'certname = {{ IP.stdout }}'  }
     - { dest: '/etc/puppetlabs/puppet/puppet.conf', regexp: 'server = ', line: 'server = puppetmaster-softlayer-hk189'  }
     - { dest: '/etc/puppetlabs/puppet/puppet.conf', regexp: 'environment = ', line: 'environment = production'  }
     - { dest: '/etc/puppetlabs/puppet/puppet.conf', regexp: 'runinterval = ', line: 'runinterval = 1m'  }
     - { dest: '/etc/hosts', regexp: '119.81.239.189 puppetmaster-softlayer-hk189', line: '119.81.239.189 puppetmaster-softlayer-hk189'  }
     - { dest: '/etc/profile', regexp: 'export PATH=', line: 'export PATH=/opt/puppetlabs/bin/puppet:$PATH'  }
    when: 'centos7.stdout == "7" and pup7.stdout != "puppet"'
  - name: Puppet7 source /etc/profile
    shell: source /etc/profile
    args:
     executable: /bin/bash
    when: 'centos7.stdout == "7" and pup7.stdout != "puppet"'
  - name: Enable puppet7
    systemd:
     name: puppet
     enabled: yes
    when: 'centos7.stdout == "7" and pup7.stdout != "puppet"'
  - name: Puppet7 agent
    debug:
     msg: "Puppet Agent has been installed."
    when: 'centos7.stdout == "7" and pup7.stdout != "puppet"'
  - name: Checking if puppet is installed
    debug:
     msg: "Puppet was already installed. Review puppet.conf"
    when: 'centos6.stdout != "6" and pup6.stdout == "puppet" and centos7.stdout != "7"'
  - name: Installing Puppet Repository for CentOS 5.x
    command: rpm -Uvh https://yum.puppet.com/puppet/puppet-release-el-5.noarch.rpm
    when: 'centos6.stdout != "6" and pup6.stdout != "puppet" and centos7.stdout != "7"'
  - name: Puppet Installing Puppet Agent
    yum:
     name: puppet-agent
     state: present
    when: 'centos6.stdout != "6" and pup6.stdout != "puppet" and centos7.stdout != "7"'
  - name: Puppet Configuring Puppet Agent
    lineinfile:
     dest: '{{ item.dest }}'
     regexp: '^{{ item.regexp }}'
     line: '{{ item.line }}'
     state: present
    with_items:
     - { dest: '/etc/puppetlabs/puppet/puppet.conf', regexp: 'certname = ', line: 'certname = {{ IP.stdout }}'  }
     - { dest: '/etc/puppetlabs/puppet/puppet.conf', regexp: 'server = ', line: 'server = puppetmaster-softlayer-hk189'  }
     - { dest: '/etc/puppetlabs/puppet/puppet.conf', regexp: 'environment = ', line: 'environment = production'  }
     - { dest: '/etc/puppetlabs/puppet/puppet.conf', regexp: 'runinterval = ', line: 'runinterval = 1m'  }
     - { dest: '/etc/hosts', regexp: '119.81.239.189 puppetmaster-softlayer-hk189', line: '119.81.239.189 puppetmaster-softlayer-hk189'  }
    when: 'centos6.stdout != "6" and pup6.stdout == "puppet" and centos7.stdout != "7"'
  - name: Puppet source /etc/profile
    shell: source /etc/profile
    args:
     executable: /bin/bash
    when: 'centos6.stdout != "6" and pup6.stdout != "puppet" and centos7.stdout != "7"'
  - name: Enable puppet
    systemd:
     name: puppet
     enabled: yes
    when: 'centos6.stdout != "6" and pup6.stdout != "puppet" and centos7.stdout != "7"'
  - name: Puppet agent
    debug:
     msg: "Puppet Agent has been installed."
    when: 'centos6.stdout != "6" and pup6.stdout != "puppet" and centos7.stdout != "7"'
  - name: PUPPETCERT kill puppet agent
    shell: kill -9 `ps aux | grep -F "puppet agent --test" | grep -Ev "grep" | awk '{print $2}'`
    register: review
    when: '"{{ cent_choose }}" == "1"'
    ignore_errors: yes
  - name: PUPPETCERT Generating certificate of puppet agent
    shell: nohup /opt/puppetlabs/bin/puppet agent --test --waitforcert 10 </dev/null >/dev/null 2>&1 &
    when: '"{{ cent_choose }}" == "1"'
    ignore_errors: yes
  - name: PUPPETCERT kill puppet agent2
    shell: kill -9 `ps aux | grep -F "puppet agent --test" | grep -Ev "grep" | awk '{print $2}'` 
    register: review
    when: '"{{ cent_choose }}" == "2"'
    ignore_errors: yes
  - name: PUPPETCERT Review puppet.conf
    shell: cat /etc/puppetlabs/puppet/puppet.conf
    register: review
    when: '"{{ cent_choose }}" == "2"'
    ignore_errors: yes
  - name: PUPPETCERT puppet.conf
    debug:
     var: review.stdout_lines
    when: '"{{ cent_choose }}" == "2"'
    ignore_errors: yes
  - name: PUPPETCERT invalid input
    debug:
     msg: "Wrong input on puppet configuration"
    when: 
     - '"1" not in "{{ cent_choose }}"'
     - '"2" not in "{{ cent_choose }}"'
    ignore_errors: yes
  - name: Source .bashrc and /etc/profile
    shell: source {{ item }} 
    args:
     executable: /bin/bash
    with_items:
     - .bashrc
     - /etc/profile
  - name: Network service restart
    service:
     name: network
     state: restarted
  - name: Completed
    debug: 
     msg:
      - "Server Initialization Complete"
      - "Kindly source again .bashrc and /etc/profile"
      - "Please test ssh by accessing the newly initialized server in another terminal. If able to access, you may now reboot the server."
    

  tasks:
  - name: Execute
    command: echo "Initialization"
    notify: 
    - Installing wget
    - Downloading rpmforge
    - Executing script
    - Installing package
    - Removing package
    - Removing user
    - Removing group
    - Creating snadmin user
    - Creating directory
    - Downloading authorized_keys
    - Changing ownership
    - Moving .bashrc to snadmin
    - Downloading root-bashrc
    - Adding file on tmp
    - Copying .bashrc
    - Appending on .bashrc
    - Executing a command
    - Downloading root-etc-bashrc
    - Appending on rsyslog.conf
    - Adding file on /var/log/
    - Restarting rsyslog service
    - Disabling firewalld
    - Enabling iptables
    - Configuring iptables
    - Configuring iptables2
    - Downloading iptables.sh
    - Adding to rc.local
    - Run iptables
    - Configuring ssh
    - Configuring ssh2
    - Restarting ssh service
    - Checking multi-user
    - Setting multi-user
    - Disabling SELINUX
    - Configuring fstab
    - Configuring tmp
    - Configuring tmp2
    - Managing running services
    - The following are the running or enabled services
    - Disabling avahi-daemon
    - Configuring ulimit
    - Configuring ulimit2
    - Creating backup for sysctl
    - Configuring and reloading sysctl
    - Setting up default timezone HK
    - Setting up cron
    - Executing ntpdate
    - Checking current time
    - Current Time
    - Setting default language US
    - Downloading nrpe script
    - Installing nrpe
    #- Creating directory (/bak/scripts/monitor)
    #- Downloading cmdb_agent
    #- Setting cmdb script
#    - Source .bashrc and /etc/profile
#    - Disabling services (postfix and NetworkManager)
#    - Completed


  post_tasks:
  - name: Run puppet
    command: echo "Run puppet"
    notify:
     - Adding Epel and Rpmforge Repository
     - Downloading rpmforge
     - Executing script
     #- Variable
     - Variable2
     - Variable3
     - Variable4
     - Variable5
     - Variable6
     - Variable7
     - Variable8
     - Variable9
     - old_puppet_repo Stopping old puppet process
     - old_puppet_repo Checking if /etc/yum.repos.d/puppetlabs.repo exist
     - old_puppet_repo Removing puppetlabs
     - old_puppet_repo Removing puppet
     - old_puppet_repo Removing puppet files
     - old_puppet_repo Loading
     - Checking if puppet6 is installed
     - Installing Puppet Repository for CentOS 6.x
     - Puppet6 Installing Puppet Agent
     - Puppet6 Configuring Puppet Agent
     - Puppet6 source /etc/profile
     - Enable puppet6
     - Puppet6 agent
     - Checking if puppet7 is installed
     - Installing Puppet Repository for CentOS 7.x
     - Puppet7 Installing Puppet Agent
     - Puppet7 Configuring Puppet Agent
     - Puppet7 source /etc/profile
     - Enable puppet7
     - Puppet7 agent
     - Checking if puppet is installed
     - Installing Puppet Repository for CentOS 5.x
     - Puppet Installing Puppet Agent
     - Puppet Configuring Puppet Agent
     - Puppet source /etc/profile
     - Enable puppet
     - Puppet agent
     - PUPPETCERT kill puppet agent
     - PUPPETCERT Generating certificate of puppet agent
     - PUPPETCERT kill puppet agent2
     - PUPPETCERT Review puppet.conf
     - PUPPETCERT puppet.conf
     - PUPPETCERT invalid input
     - Source .bashrc and /etc/profile
     - Disabling services (postfix and NetworkManager)
     - Completed





