#credits to: Paul Cyrus Verzola and Jommel Valdez
#created by: Yroll Jay-R Macalino
---
- hosts: init-centOS7-forwarding-2018
  gather_facts: yes

  vars:
    SSHPORT: "2556"
    user: "omadmin"

  vars_prompt:
    - name: "pc-settings-password"
      prompt: "PC Settings Password"
      private: yes

  pre_tasks:
  - name: "Checking DNS"
    command: cat /etc/resolv.conf
    register: dns_server
    changed_when: false
  - name: "Change DNS"
    lineinfile:
     dest: /etc/resolv.conf
     regexp: '^nameserver {{ item }}'
     line: 'nameserver {{ item }}'
     state: present
    with_items:
     - 8.8.8.8
     - 8.8.4.4
    changed_when: '"{{ item }}" not in dns_server.stdout'
    ignore_errors: yes

  handlers:
  - name: Question
    pause:
      prompt: "##############################\nIF HAVING PROBLEM WITH NAMING, ASK JAX/AARON\n##############################\nPlease enter the group and type: \nSample: bbet8-nginx, acc-midpay_ftp \n##############################\n"
    register: LINUXGROUP
  - name: Question1
    pause:
      prompt: "Server Count number:\nSample: {{ LINUXGROUP.user_input }}1, {{ LINUXGROUP.user_input }}7 \n##############################\n"
    register: LINUXNUMBER
  - name: Not-integers
    shell: 'echo {1..99}'
    register: notinteg
  - name: Not-integers error
    fail:
      prompt: "Sorry integers only"
    when: 'LINUXNUMBER.user_input not in notinteg.stdout'
  - name: Variable
    shell: cat /etc/redhat-release | awk '{print $3}' | cut -d '.' -f1 2>&1
    register: centos6
  - name: Variable1
    shell: cat /etc/redhat-release | awk '{print $4}' | cut -d '.' -f1 2>&1
    register: centos7
  - name: Variable2
    shell: cat /etc/os-release 2>&1
    register: ubuntu
  - name: Requirements-good
    debug:
     msg: "Server meets script requirements"
    when: 'centos7.stdout == "7"'
  - name: Requirements-failed
    fail:
     msg: "Check server CentOS version, script is for CentOS7"
    when: 'centos7.stdout != "7"'
  - name: Check-if-root
    shell: whoami
    register: checkroot
  - name: Check-if-root1
    fail:
     msg: "please run this script as root ."
    when: 'checkroot.stdout != "root"'
  - name: Installing packages
    yum:
     name:
     - "{{ item }}"
     state: present
    with_items:
     - epel-release
     - jq
  - name: Getting-IP
    shell: "curl -s ipinfo.io > /tmp/ip-info"
  - name: Check-country
    shell: cat /tmp/ip-info|jq '.country'|awk '{print tolower($0)}' | sed -e 's/^"//' -e 's/"$//'
    register: cntry
  - name: Check-provider
    shell: cat /tmp/ip-info|jq '.org'|awk '{print tolower($0)}'
    register: cprov
  - name: Checking-provider0
    command: "{{ item.command }}"
    register: cprov
    when: "{{ item.when }}"
    with_items:
      - { shell: "echo az", when: "'microsoft' in cprov.stdout" }
      - { shell: "echo ali", when: "'alibaba' in cprov.stdout" }
      - { shell: "echo rax", when: "'rackspace' in cprov.stdout" }
      - { shell: "echo sl", when: "'softlayer' in cprov.stdout" }
  - name: Checking-provider
    command: 'echo az'
    register: cprov
    when: "'microsoft' in cprov.stdout"
    ignore_errors: yes
  - name: Check-provider1
    shell: cat /tmp/ip-info|jq '.org'|awk '{print tolower($0)}'
    register: cprov
    when: 'cprov.skipped'
    ignore_errors: yes
  - name: Checking-provider1
    command: 'echo ali'
    register: cprov
    when: "'alibaba' in cprov.stdout"
    ignore_errors: yes
  - name: Check-provider2
    shell: cat /tmp/ip-info|jq '.org'|awk '{print tolower($0)}'
    register: cprov
    when: 'cprov.skipped'
    ignore_errors: yes
  - name: Checking-provider2
    command: 'echo rax'
    register: cprov
    when: "'rackspace' in cprov.stdout"
    ignore_errors: yes
  - name: Check-provider3
    shell: cat /tmp/ip-info|jq '.org'|awk '{print tolower($0)}'
    register: cprov
    when: 'cprov.skipped'
    ignore_errors: yes
  - name: Checking-provider3
    command: 'echo sl'
    register: cprov
    when: "'softlayer' in cprov.stdout"
    ignore_errors: yes
  - name: Question2
    pause:
      prompt: "Cloud Provider\nSample: ali, az, aws, sl, ali\n##############################\n"
    register: cprov
    when: 'cprov.skipped'
    ignore_errors: yes
  - name: Save-linuxname
    command: echo "{{ LINUXGROUP.user_input }}{{ LINUXNUMBER.user_input }}.{{ cntry.stdout }}.{{ cprov.stdout }}.monaco1.me"
    register: LINUXNAME
    when: 'not cprov.user_input'
    ignore_errors: yes
  - name: Save-linuxname1
    command: echo "{{ LINUXGROUP.user_input }}{{ LINUXNUMBER.user_input }}.{{ cntry.stdout }}.{{ cprov.user_input }}.monaco1.me"
    register: LINUXNAME
    when: 'cprov.user_input'
    ignore_errors: yes
  - name: Question3
    pause:
      prompt: "Are you sure about the hostname: Y/N\n##############################\n{{ LINUXNAME.stdout }}\n##############################\n"
    register: checker
    when: 'cprov.stdout'
    ignore_errors: yes
  - name: Question3.1
    pause:
      prompt: "Are you sure about the hostname: Y/N\n##############################\n{{ LINUXNAME.stdout }}\n##############################\n"
    register: checker
    when: 'cprov.skipped'
    ignore_errors: yes
  - name: Set-server-hostname
    hostname:
      name: "{{ LINUXNAME.stdout }}"
    when: 'checker.user_input == "y" or checker.user_input == "Y"'
  - name: Add-again
    fail:
      prompt: "Please add again"
    when: 'checker.user_input == "n" or checker.user_input == "N"'
  - name: Check
    debug:
      var: checker
  - name: Add-name
    fail:
      prompt: "Please add name"
    when: 'checker.user_input != "y" or checker.user_input != "Y" or checker.user_input != "n" or checker.user_input != "N"'
  - name: Checking-server-hostname
    command: "uname -a"
    register: s_hostname
  - name: Server-hostname-good
    debug:
      msg: "Server hostname is {{ s_hostname.stdout }}"
    when: '"monaco1.me" in s_hostname.stdout'
  - name: Server-hostname-failed
    fail:
      prompt: "Server hostname not changed"
    when: '"monaco1.me" not in s_hostname.stdout'








  - name: Installing wget
    yum:
     name:
     - wget
     state: present
#  - name: Downloading rpmforge
#    get_url:
#     url: http://office.pc-setting.info/cyrus/add-rpmforge_epel-repo.sh
#     url_username: omadmin
#     url_password: '{{ pc-settings-password }}'
#     dest: /root/
#     mode: 0755
# - name: Executing script
#   shell: /root/add-rpmforge_epel-repo.sh && yum clean all && yum makecache
  - name: Installing packages2
    yum:
     name:
     - "{{ item }}"
     state: present
    with_items:
     - vim-enhanced
     - net-tools
     - lsof
     - wget
     - cronie
     - ntp
     - lrzsz
     - gcc
     - gcc-c++
     - make
     - cmake
     - libxml2-devel
     - openssl-devel
     - curl
     - curl-devel
     - unzip
     - sudo
     - libaio-devel
     - ncurses-devel
     - autoconf
     - automake
     - zlib-devel
     - python-devel
     - iptables-services
     - policycoreutils
     - openssh-clients
     - iproute
     - telnet
     - xinetd
     - git
     - psmisc
  - name: Removing package
    yum:
     name:
     - "{{ item }}"
     state: absent
    with_items:
     - lyx-fonts
     - selinux-policy*
     - firewalld
     - iw*
     - NetworkManager*
     - wpa_supplicant
     - newt
     - dnsmasq
  - name: Removing user
    user:
     name:
     - "{{ item }}"
     state: absent
     remove: yes
    with_items:
     - adm
     - operator
     - games
     - gopher
  - name: Removing group
    group:
     name:
     - "{{ item }}"
     state: absent
    with_items:
     - adm
     - dip
     - audio
     - dialout
     - floppy
     - games
     - gopher
     - tape
     - video
  - name: Creating ommgr user
    user:
     name: ommgr
     state: present
  - name: Creating directory
    file:
     path: /home/ommgr/.ssh
     owner: ommgr
     group: ommgr
     state: directory
     mode: 0700
  - name: Downloading authorized_keys
    get_url:
     url: http://office.pc-setting.info/cyrus/authorized_keys
     url_username: omadmin
     url_password: '{{ pc-settings-password }}'
     dest: /home/ommgr/.ssh/
     mode: 0600
  - name: Changing ownership
    file:
     path: /home/ommgr/.ssh/authorized_keys
     owner: ommgr
     group: ommgr
     mode: 0600
  - name: Owning directory
    file:
      path: /home/ommgr
      owner: ommgr
      group: ommgr
      state: directory
  - name: Creating root directory
    file:
      path: /root/.ssh
      owner: root
      group: root
      state: directory
      mode: 0700
  - name: Downloading root authorized_keys
    get_url:
      url: http://office.pc-setting.info/cyrus/ugatnasusi
      url_username: omadmin
      url_password: '{{ pc-settings-password }}'
      dest: /root/.ssh/authorized_keys
      mode: 0600


  - name: Moving .bashrc to ommgr
    command: mv /root/.bashrc /home/ommgr/bashrc-root.txt
    failed_when: false
  - name: Downloading root-bashrc
    get_url:
     url: http://office.pc-setting.info/cyrus/root-bashrc.txt
     url_username: omadmin
     url_password: '{{ pc-settings-password }}'
     dest: "{{ item }}"
    with_items:
     - /root/.bashrc
     - /home/ommgr/root-bashrc.txt
  - name: Adding file on tmp
    file:
     path: /tmp/{{ item }}
     state: touch
    with_items:
      - name0
      - name1
  - name: Copying .bashrc
    copy:
     remote_src: yes
     src: /home/ommgr/.bashrc
     dest: /home/ommgr/bashrc-ommgr.txt
  - name: Appending on .bashrc
    lineinfile:
     dest: /home/ommgr/.bashrc
     line: 'export HISTTIMEFORMAT="%d/%m/%y %T "'
     state: present
     insertafter: EOF
  - name: Executing a command
    shell: source /root/.bashrc /home/ommgr/.bashrc && mv /etc/bashrc /home/ommgr/etc-bashrc.txt
    failed_when: false
  - name: Downloading root-etc-bashrc
    get_url:
     url: http://office.pc-setting.info/cyrus/root-etc-bashrc.txt
     url_username: omadmin
     url_password: '{{ pc-settings-password }}'
     dest: /etc/bashrc
  - name: Appending on rsyslog.conf
    lineinfile:
     dest: /etc/rsyslog.conf
     line: 'local2.info                                     -/var/log/tmp.log'
     state: present
     insertafter: EOF
  - name: Adding file on /var/log/
    file:
     path: /var/log/tmp.log
     state: touch
     mode: 600
  - name: Restarting rsyslog service
    systemd:
     name: rsyslog
     state: restarted
  - name: Disabling firewalld
    systemd:
     name: firewalld.service
     state: stopped
     masked: yes
     enabled: no
    ignore_errors: yes
  - name: Enabling iptables
    systemd:
     name: iptables
     enabled: yes
  - name: Configuring iptables
    file:
     src: /usr/libexec/iptables/iptables.init
     dest: /etc/init.d/iptables
     state: link
  - name: Configuring iptables2
    file:
     path: /bak/bin
     state: directory
  - name: Downloading iptables.sh
    get_url:
     url: http://office.pc-setting.info/cyrus/iptables.sh
     url_username: omadmin
     url_password: '{{ pc-settings-password }}'
     dest: /bak/bin
     mode: 0755
  - name: Adding to rc.local
    lineinfile:
     dest: /etc/rc.d/rc.local
     line: 'sh /bak/bin/iptables.sh'
     mode: "u+x"
     state: present
     insertafter: EOF
  - name: Run iptables
    command: "{{ item }}"
    with_items:
     - /bak/bin/iptables.sh
     - /etc/init.d/iptables save
    ignore_errors: yes

  - name: Configuring ssh
    replace:
     path: /etc/ssh/sshd_config
     regexp: "{{ item.regexp }}"
     replace: "{{ item.line }}"
    with_items:
     - { regexp: '#Port 28032', line: 'Port {{ SSHPORT }}' }
     - { regexp: '#PermitRootLogin yes', line: 'PermitRootLogin yes' }
     - { regexp: '#PermitEmptyPasswords no', line: 'PermitEmptyPasswords no' }
     - { regexp: 'GSSAPIAuthentication yes', line: 'GSSAPIAuthentication no' }
     - { regexp: 'PasswordAuthentication yes', line: 'PasswordAuthentication no' }
     - { regexp: '#PermitUserEnvironment no', line: 'PermitUserEnvironment yes' }
     - { regexp: '#UseDNS yes', line: 'UseDNS no' }
     - { regexp: '#LoginGraceTime 2m', line: 'LoginGraceTime 1m' }
  - name: Configuring ssh2
    lineinfile:
     dest: /etc/ssh/sshd_config
     line: "{{ item }}"
     state: present
     insertafter: EOF
    with_items:
     - AllowUsers ommgr root@205.177.199.2 root@101.78.133.210
     - LogLevel DEBUG
  - name: Restarting ssh service
    systemd:
     name: sshd.service
     state: restarted
  - name: Checking multi-user
    command: systemctl get-default
    register: system
    changed_when: false
  - name: Setting multi-user
    command: systemctl set-default multi-user.target
    changed_when: 'system.stdout != "multi-user.target"'
  - name: Disabling SELINUX
    selinux:
     state: disabled
    ignore_errors: yes
  - name: Configuring fstab
    replace:
     path: /etc/fstab
     regexp: 'defaults'
     replace: 'noatime'
  - name: Configuring tmp
    file:
     path: "{{ item }}"
     state: absent
    with_items:
     - /var/tmp
     - /usr/tmp
    ignore_errors: yes
  - name: Configuring tmp2
    file:
     src: /tmp/
     dest: "{{ item }}"
     state: link
    with_items:
     - /var/tmp
     - /usr/tmp
    ignore_errors: yes
  - name: Managing running services
#    shell: systemctl list-unit-files | grep "{{ item }}" | awk '{print $1}' | cut -d "." -f1 > out
    shell: for i in {cpuspeed,crond,irqbalance,messagebus,smartd,sshd,syslog} ; do systemctl list-unit-files | grep $i | awk '{print $1}' | cut -d "." -f1 ; done
#    with_items:
#     - cpuspeed
#     - crond
#     - irqbalance
#     - messagebus
#     - smartd
#     - sshd
#     - syslog
#  - name: Checking running services
#    command: cat out
    register: listfiles
  - name: The following are the running or enabled services
    debug:
     var: listfiles.stdout_lines
  - name: Disabling services (postfix and NetworkManager)
    systemd:
     name: "{{ item.name }}"
     state: "{{ item.state }}"
     enabled: no
    with_items:
     - { name: 'postfix', state: 'stopped' }
     - { name: 'NetworkManager', state: 'stopped' }
     - { name: 'network.service', state: 'restarted' }
    ignore_errors: yes
  - name: Disabling avahi-daemon
    command: "{{ item }}"
    ignore_errors: yes
    with_items:
     - systemctl stop avahi-daemon.socket avahi-daemon.service
     - systemctl disable avahi-daemon.socket avahi-daemon.service
    failed_when: false
  - name: Configuring ulimit
    lineinfile:
     dest: /etc/rc.local
     line: 'ulimit -SHn 102400'
     state: present
     insertafter: EOF
  - name: Configuring ulimit2
    pam_limits:
     domain: '*'
     limit_type: "{{ item.ltype }}"
     limit_item: "{{ item.litem }}"
     value: 102400
    with_items:
     - { ltype: 'soft', litem: 'nofile' }
     - { ltype: 'hard', litem: 'nofile' }
     - { ltype: 'soft', litem: 'nproc' }
     - { ltype: 'hard', litem: 'nproc' }
  - name: Creating backup for sysctl
    copy:
     remote_src: yes
     src: /etc/sysctl.conf
     dest: /tmp/sysctl.conf.bak
  - name: Configuring and reloading sysctl
    sysctl:
     name: "{{ item.name }}"
     value: "{{ item.value }}"
     state: present
     reload: yes
    with_items:
     - { name: 'net.ipv4.ip_forward', value: '0' }
     - { name: 'net.ipv4.conf.default.rp_filter', value: '1' }
     - { name: 'net.ipv4.conf.default.accept_source_route', value: '0' }
     - { name: 'kernel.sysrq', value: '0' }
     - { name: 'kernel.core_uses_pid', value: '1' }
     - { name: 'net.ipv4.tcp_syncookies', value: '1' }
     - { name: 'kernel.msgmnb', value: '65536' }
     - { name: 'kernel.msgmax', value: '65536' }
     - { name: 'kernel.shmmax', value: '68719476736' }
     - { name: 'kernel.shmall', value: '4294967296' }
     - { name: 'net.ipv4.tcp_max_tw_buckets', value: '6000' }
     - { name: 'net.ipv4.tcp_sack', value: '1' }
     - { name: 'net.ipv4.tcp_window_scaling', value: '1' }
     - { name: 'net.ipv4.tcp_rmem', value: '4096 87380 4194304' }
     - { name: 'net.ipv4.tcp_wmem', value: '4096 16384 4194304' }
     - { name: 'net.core.wmem_default', value: '8388608' }
     - { name: 'net.core.rmem_default', value: '8388608' }
     - { name: 'net.core.rmem_max', value: '16777216' }
     - { name: 'net.core.wmem_max', value: '16777216' }
     - { name: 'net.core.netdev_max_backlog', value: '262144' }
     - { name: 'net.core.somaxconn', value: '32768' }
     - { name: 'net.ipv4.tcp_max_orphans', value: '3276800' }
     - { name: 'net.ipv4.tcp_max_syn_backlog', value: '262144' }
     - { name: 'net.ipv4.tcp_timestamps', value: '0' }
     - { name: 'net.ipv4.tcp_synack_retries', value: '1' }
     - { name: 'net.ipv4.tcp_syn_retries', value: '1' }
     - { name: 'net.ipv4.tcp_tw_recycle', value: '1' }
     - { name: 'net.ipv4.tcp_tw_reuse', value: '1' }
     - { name: 'net.ipv4.tcp_mem', value: '94500000 915000000 927000000' }
     - { name: 'net.ipv4.tcp_fin_timeout', value: '1' }
     - { name: 'net.ipv4.tcp_keepalive_time', value: '1200' }
     - { name: 'net.ipv4.ip_local_port_range', value: '1024 65535' }
  - name: Setting up default timezone HK
    timezone:
     name: Asia/Hong_Kong
  - name: Setting up cron
    cron:
     name: "{{ item.name }}"
     job: "{{ item.job }}"
     user: root
     hour: "{{ item.hour }}"
     minute: "{{ item.minute }}"
     state: present
    with_items:
     - { name: 'Setting ntpupdate', job: '/usr/sbin/ntpdate pool.ntp.org > /dev/null 2>&1', hour: '*/5', minute: '*' }
#     - { name: 'Setting cmdb', job: 'python /bak/scripts/monitor/cmdb_agent/bin/run.py >> /bak/scripts/monitor/cmdb.log 2>&1', hour: '*', minute: '1' }
  - name: Executing ntpdate
    command: /usr/sbin/ntpdate pool.ntp.org
    failed_when: false
  - name: Checking current time
    shell: timedatectl status | grep "Local time"
    register: ctime
  - name: Current Time
    debug:
     var: ctime.stdout_lines
  - name: Setting default language US
    command: localectl set-locale LANG=en_US.UTF-8
  - name: Downloading nrpe script
    get_url:
     url: http://office.pc-setting.info/cyrus/nrpe-centOS7.sh
     url_username: omadmin
     url_password: '{{ pc-settings-password }}'
     dest: /root/
     mode: 0755
  - name: Installing nrpe
    command: /root/nrpe-centOS7.sh
  - name: Creating directory (/bak/scripts/monitor)
    file:
     path: /bak/scripts/monitor
     state: directory
  - name: Downloading cmdb_agent
    git:
     repo: 'http://om:{{ pc-settings-password }}@git.neweb.me/python_codes/cmdb_agent.git'
     dest: /bak/scripts/monitor/cmdb_agent
  - name: Setting cmdb script
    command: python /bak/scripts/monitor/cmdb_agent/bin/run.py


  - name: Question4
    pause:
      prompt: "Do you want to Install ZABBIX?\n\t1. Install\n\t2. Exit/Skip"
    register: optn
  - name: Delete old config
    shell: rm -rfv /etc/zabbix/*
    failed_when: false
  - name: Centos6 zabbix installation
    shell: 'rpm -ivh https://repo.zabbix.com/zabbix/4.0/rhel/6/x86_64/zabbix-release-4.0-1.el6.noarch.rpm'
    when: 'centos6.stdout == "6"'
  - name: Centos7 zabbix installation
    shell: 'rpm -ivh https://repo.zabbix.com/zabbix/4.0/rhel/7/x86_64/zabbix-release-4.0-1.el7.noarch.rpm'
    when: 'centos7.stdout == "7"'
  - name: Centos zabbix installation2
    yum:
      name: '*'
      state: latest
    when: 'centos6.stdout == "6" or centos7.stdout == "7"'
  - name: Centos zabbix installation3
    yum:
      name: "zabbix-agent"
      state: absent
    when: 'centos6.stdout == "6" or centos7.stdout == "7"'
  - name: Centos zabbix installation4
    yum:
      name: "zabbix-agent"
      state: present
    when: 'centos6.stdout == "6" or centos7.stdout == "7"'
  - name: Ubuntu zabbix installation
    get_url:
      url: "https://repo.zabbix.com/zabbix/4.0/ubuntu/pool/main/z/zabbix-release/zabbix-release_4.0-2+bionic_all.deb"
    when: 'centos6.stdout != "6" or centos7.stdout != "7"'
  - name: Ubuntu zabbix installation2
    apt:
      deb: zabbix-release_4.0-2+bionic_all.deb
    when: 'centos6.stdout != "6" or centos7.stdout != "7"'
  - name: Ubuntu zabbix installation3
    apt:
      update_cache: yes
    when: 'centos6.stdout != "6" or centos7.stdout != "7"'
  - name: Ubuntu zabbix installation4
    file:
      path: ./zabbix-release_4.0-2+bionic_all.deb
      state: absent
    when: 'centos6.stdout != "6" or centos7.stdout != "7"'
  - name: Ubuntu zabbix installation5
    apt:
      name: zabbix-agent
      state: present
    when: 'centos6.stdout != "6" or centos7.stdout != "7"'
  - name: Sudoers
    file:
     path: /etc/sudoers.d/zabbix
     state: touch
  - name: Sudoers2
    lineinfile:
      dest: /etc/sudoers.d/zabbix
      line: '{{ item }}'
      state: present
      insertafter: EOF
    with_items:
      - "Defaults:zabbix !requiretty"
      - "Cmnd_Alias ZABBIX_CMD = /etc/zabbix/include/*"
      - "zabbix ALL = (root) NOPASSWD: ZABBIX_CMD"
  - name: Removing zabbix_agentd.conf
    file:
      path: /etc/zabbix/zabbix_agentd.conf
      state: absent
  - name: Downloading zabbix
    get_url:
      url: http://omadmin:'{{ pc-settings-password }}'@office.pc-setting.info/cyrus/zabbix_agent/cloud_nginx/zabbix_include.tar.gz
      dest: /etc/zabbix
  - name: Extract archive
    unarchive:
      src: /etc/zabbix/zabbix_include.tar.gz
      dest:  /etc/zabbix
      extra_opts: [--strip-components=1]
  - name: Changing permission
    file:
      path: /etc/zabbix/include/*
      mode: '+x'
  - name: Configuring zabbix_agentd.conf
    file:
      path: /etc/zabbix/zabbix_agentd.conf
      state: touch
  - name: Configuring zabbix_agentd.conf2
    lineinfile:
     dest: /etc/zabbix/zabbix_agentd.conf
     line: '{{ item }}'
     state: present
#     insertafter: EOF
    with_items:
      - 'PidFile=/var/run/zabbix/zabbix_agentd.pid'
      - 'LogFile=/var/log/zabbix/zabbix_agentd.log'
      - 'LogFileSize=0'
      - ' '
      - 'ServerActive= 119.9.94.6'
      - 'Server=119.9.94.6'
      - 'HostMetadata=cloud_nginx'
      - 'Include=/etc/zabbix/zabbix_agentd.d/*.conf'
      - ' '
      - 'UserParameter=tcp.connections,/etc/zabbix/include/check_tcp_connections.sh'
      - 'UserParameter=process.check_process[*],/etc/zabbix/include/check_process.sh $1'
  - name: Restarting zabbix-agent
    systemd:
     name: zabbix-agent
     state: restarted
  - name: Execute python command
    shell: python -c 'import socket;hostname = socket.gethostname();print hostname.replace(".","").replace("-","").replace("_","").replace("monaco1me","")'
    register: HN
  - name: Creating keys directory
    file:
     path: /etc/zabbix/keys
     state: directory
  - name: Downloading cloud-agent.psk
    get_url:
     url:a
     url_username: omadmin
     url_password: '{{ pc-settings-password }}'
     dest: /etc/zabbix/keys
  - name: Configuring zabbix_agentd.conf3
    shell: 'echo "{{ item }}">>  /etc/zabbix/zabbix_agentd.conf'
    with_items:
      - 'TLSPSKIdentity={{ HN.stdout }}'
      - 'TLSAccept=unencrypted,psk'
      - 'TLSConnect=psk'
      - 'TLSPSKFile=/etc/zabbix/keys/cloud-agent.psk'
  - name: Restarting zabbix-agent2
    systemd:
      name: zabbix-agent
      state: restarted

  - name: Completed
    debug:
     msg:
      - "Server Initialization Complete"
      - "Kindly source again .bashrc and /etc/profile"
      - "Please test ssh by accessing the newly initialized server in another terminal. If able to access, you may now reboot the server."



  tasks:
  - name: Execute
    command: echo "Initialization"
    notify:
    - Question
    - Question1
    - Not-integers
    - Not-integers error
    - Variable
    - Variable1
    - Variable2
    - Requirements-good
    - Requirements-failed
    - Check-if-root
    - Check-if-root1
    - Installing packages
    - Getting-IP
    - Check-country
    - Check-provider
#    - Checking-provider0
    - Checking-provider
    - Check-provider1
    - Checking-provider1
    - Check-provider2
    - Checking-provider2
    - Check-provider3
    - Checking-provider3
    - Question2
    - Save-linuxname
    - Save-linuxname1
    - Question3
#    - Question3.1
    - Set-server-hostname
    - Add-again
    - Check
    - Add-name
    - Checking-server-hostname
    - Server-hostname-good
    - Server-hostname-failed
    - Installing wget
    - Downloading rpmforge
    - Executing script
    - Installing package
    - Removing package
    - Removing user
    - Removing group
    - Creating ommgr user
    - Creating directory
    - Downloading authorized_keys
    - Changing ownership
    - Owning directory
    - Creating root directory
    - Downloading root authorized_keys
    - Moving .bashrc to ommgr
    - Downloading root-bashrc
    - Adding file on tmp
    - Copying .bashrc
    - Appending on .bashrc
    - Executing a command
    - Downloading root-etc-bashrc
    - Appending on rsyslog.conf
    - Adding file on /var/log/
    - Restarting rsyslog service
    - Disabling firewalld
    - Enabling iptables
    - Configuring iptables
    - Configuring iptables2
    - Downloading iptables.sh
    - Adding to rc.local
    - Run iptables
    - Configuring ssh
    - Configuring ssh2
    - Restarting ssh service
    - Checking multi-user
    - Setting multi-user
    - Disabling SELINUX
    - Configuring fstab
    - Configuring tmp
    - Configuring tmp2
    - Managing running services
    - The following are the running or enabled services
    - Disabling avahi-daemon
    - Configuring ulimit
    - Configuring ulimit2
    - Creating backup for sysctl
    - Configuring and reloading sysctl
    - Setting up default timezone HK
    - Setting up cron
    - Executing ntpdate
    - Checking current time
    - Current Time
    - Setting default language US
    - Downloading nrpe script
    - Installing nrpe
#  post_tasks:
#  - name: Zabbix installation
#    block:
#    notify:
#    - Question4
#    - Delete old config
#    - Centos6 zabbix installation
#    - Centos7 zabbix installation
#    - Centos zabbix installation2
#    - Centos zabbix installation3
#    - Centos zabbix installation4
#    - Ubuntu zabbix installation
#    - Ubuntu zabbix installation2
#    - Ubuntu zabbix installation3
#    - Ubuntu zabbix installation4
#    - Ubuntu zabbix installation5
#    - Removing zabbix_agentd.conf
#    - Downloading zabbix
#    - Extract archive
#    - Changing permission
#    - Configuring zabbix_agentd.conf
#    - Configuring zabbix_agentd.conf2
#    - Restarting zabbix-agent
#    - Creating keys directory
#    - Downloading cloud-agent.psk
#    - Configuring zabbix_agentd.conf3
#    - Restarting zabbix-agent2
#    when: 'optn.stdout == 1'
#    notify:
#    - Completed